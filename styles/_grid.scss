html {
  box-sizing: border-box;
  -ms-overflow-style: scrollbar;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

// defaultgrid config
$grid-columns: 8 !default;
$grid-gutter-width: 20px !default;
/* PRIVATE MIXINS */

@mixin make-col-ready($grid-gutter-width: $grid-gutter-width) {
  position: relative; // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
}

@mixin make-col($size: null, $columns: $grid-columns) {
  @if ($size) {
    flex: 0
      0
      percentage(
        $size / $columns
      ); // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width: percentage($size / $columns);
  } @else {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }
}

@mixin make-col-by-content() {
  flex: 0 0 auto;
  width: auto;
  max-width: none; // Reset earlier grid tiers
}

/* PUBLIC MIXINS */

@mixin container($grid-gutter-width: $grid-gutter-width) {
  width: 100%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;
}

@mixin row($grid-gutter-width: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

@mixin col(
  $size: null,
  $columns: $grid-columns,
  $gutter-width: $grid-gutter-width
) {
  @include make-col-ready($gutter-width);
  @include make-col($size, $columns);
}

// columnt with width 100%
@mixin col-100($gutter-width: $grid-gutter-width) {
  @include make-col-ready($gutter-width);
}

// without gatters
@mixin col-no-gutters($size: null, $columns: $grid-columns) {
  @include make-col-ready(0);
  @include make-col($size, $columns);
}

// Column with width dependent on content
@mixin col-by-conten($gutter-width: $grid-gutter-width) {
  @include make-col-ready($gutter-width);
  @include make-col-by-content();
}

@mixin col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num==0, 0, percentage($num));
}
